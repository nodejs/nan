# http://www.appveyor.com/docs/appveyor-yml

image:
  - Visual Studio 2017

# Test against these versions of Io.js and Node.js.
environment:
  matrix:
  # node.js
    - nodejs_version: "0.10"
    - nodejs_version: "0.12"
    - nodejs_version: "4"
    - nodejs_version: "5"
    - nodejs_version: "6"
    - nodejs_version: "7"
    - nodejs_version: "8"
    - nodejs_version: "9"
    - nodejs_version: "10"
    - nodejs_version: "11"
    - nodejs_version: "12"
    - nodejs_version: "13"
    - nodejs_version: "14"
    - nodejs_version: "15"
    - nodejs_version: "16"
    - nodejs_version: "17"
    - nodejs_version: "18"
    - nodejs_version: "19"
    - nodejs_version: "20"
    - nodejs_version: "21"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      nodejs_version: "22"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      nodejs_version: "23"

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node 0.STABLE.latest
  - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) x64
  - IF %nodejs_version% LSS 4 npm -g install npm@2
  - IF %nodejs_version% EQU 5 npm -g install npm@3
  - set PATH=%APPDATA%\npm;%PATH%
  # Typical npm stuff.
  - npm install
  - IF %nodejs_version% GEQ 22 set NODE_GYP_FORCE_PYTHON=C:\Python312-x64\python.exe
  - IF %nodejs_version% LSS 8 (npm run rebuild-tests-2015) ELSE (npm run rebuild-tests)

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - IF %nodejs_version% LSS 1 (npm test) ELSE (IF %nodejs_version% LSS 4 (iojs node_modules\tap\bin\tap.js --gc test/js/*-test.js) ELSE (node node_modules\tap\bin\tap.js --gc test/js/*-test.js))

# Don't actually build.
build: off

# Set build version format here instead of in the admin panel.
version: "{build}"
